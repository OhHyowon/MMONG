<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmong.config.mapper.boardMapper">

	<!-- board resultMap -->
	<resultMap type="board" id="board-resultmap">
		<result column="no" property="no" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="board_date" property="boardDate" />
		<result column="hit" property="hit" />
		<result column="member_Id" property="memberId" />
		<result column="group_no" property="groupNo"/>
		<result column="reply_count" property="replyCount" />
	</resultMap>

	<!-- board랑member resultMap -->
	<resultMap type="board" id="board-member-resultMap" extends="board-resultmap">
		<association property="member" javaType="member">
			<result column="member_id" property="memberId" />
			<result column="member_name" property="memberName" />
			<result column="nickname" property="nickName" />
			<result column="member_phone" property="memberPhone" />
			<result column="member_address" property="memberAddress" />
			<result column="member_email" property="memberEmail" />
			<result column="member_picture" property="memberPicture" />
		</association>
	</resultMap>


	<!-- board Picture resultMap -->
	<resultMap type="boardPicture" id="boardPicture-reusltmap">
		<result column="no" property="no" />
		<result column="route" property="route" />
		<result column="board_no" property="boardNo" />
	</resultMap>

	<sql id="select-board">
		SELECT no,title,content,board_date,hit,member_id,group_no
		FROM board
	</sql>


	<!-- BOARD 등록 -->
	<insert id="insertBoard" parameterType="board" >
		<selectKey keyProperty="no" resultType="_int" order="BEFORE">
			SELECT BOARD_NO_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO board VALUES(
		#{no},#{title},#{content},#{boardDate},#{hit},#{memberId},#{groupNo}
		)
	</insert>

	<!-- BOARD NO으로 게시물 찾아오기 -->
	<select id="selectBoardByNo" parameterType="int" resultMap="board-resultmap">
		SELECT no,title,content,board_date,hit,member_id,group_no
		FROM 	board
		WHERE no=#{value}
	</select>

	<!-- BOARD UPDATE 하기 -->
	<update id="updateBoard" parameterType="board">
		UPDATE board
		SET
		no=#{no},
		title = #{title},
		content=#{content},
		board_date=#{boardDate},
		hit=#{hit},
		member_id=#{memberId}
		WHERE no=#{no}
	</update>

	<!-- BOARD-MEMBER 조인 -->
	<select id="selectNickNameByMemberId" parameterType="map"
		resultType="string">
		SELECT m.nickname
		FROM board b JOIN member m ON b.member_id=m.member_id
		WHERE m.member_id=#{memberId}
		AND b.no=#{boardNo}
	</select>

	<!-- 한개Board 삭제 -->
	<delete id="deleteBoard" parameterType="map">
		DELETE board
		WHERE no=#{boardNo}
		AND member_Id=#{memberId}
	</delete>

	<!-- 전체 board List -->
	<select id="selectAllBoard" parameterType="map" resultMap="board-resultmap">
	<![CDATA[
		SELECT no,content, title, board_date, hit, member_id, group_no, reply_count
		FROM (
			SELECT rownum rnum, no, content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
				SELECT b.no, b.content, b.title, b.board_date, b.hit, b.member_id, b.group_no,count(r.no) reply_count
				FROM board b, reply r
				WHERE b.no=r.board_no(+)
				GROUP BY b.no, b.title, b.content, b.board_date, b.hit, b.member_id, b.group_no
				ORDER BY b.no DESC
			)
			WHERE rownum <= #{endItemNo}
		)
		WHERE rnum >=#{beginItemNo}
	]]>
	</select>

	<!-- option에 따른 List -->
	<select id="selectOption" parameterType="map" resultMap="board-resultmap">
		<choose>
			<when test="option=='title'">
			<![CDATA[
			SELECT no,content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
			SELECT rownum rnum, no, content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
				SELECT b.no, b.content, b.title, b.board_date, b.hit, b.member_id, b.group_no, count(r.no) reply_count
				FROM board b, reply r
				WHERE b.no=r.board_no(+)
				AND b.title LIKE '%'||#{key}||'%'
				GROUP BY b.no, b.title, b.content, b.board_date, b.hit, b.member_id, b.group_no
				ORDER BY b.no DESC
			)
			WHERE rownum <= #{endItemNo}
		)
		WHERE rnum >=#{beginItemNo}
		]]>
			</when>
			<when test="option=='content'">
			<![CDATA[
			SELECT no,content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
			SELECT rownum rnum, no, content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
				SELECT b.no, b.content, b.title, b.board_date, b.hit, b.member_id, b.group_no, count(r.no) reply_count
				FROM board b, reply r
				WHERE b.no=r.board_no(+)
				AND b.content LIKE '%'||#{key}||'%'
				GROUP BY b.no, b.title, b.content, b.board_date, b.hit, b.member_id, b.group_no
				ORDER BY b.no DESC
			)
			WHERE rownum <= #{endItemNo}
		)
		WHERE rnum >=#{beginItemNo}
	
		]]>
			</when>
			<otherwise>
			<![CDATA[
			SELECT no,content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
			SELECT rownum rnum, no, content, title, board_date, hit, member_id, group_no, reply_count
			FROM (
				SELECT b.no, b.content, b.title, b.board_date, b.hit, b.member_id, b.group_no, count(r.no) reply_count
				FROM board b, reply r
				WHERE b.no=r.board_no(+)
				AND b.member_id LIKE '%'||#{key}||'%'
				GROUP BY b.no, b.title, b.content, b.board_date, b.hit, b.member_id, b.group_no
				ORDER BY b.no DESC
			)
			WHERE rownum <= #{endItemNo}
		)
		WHERE rnum >=#{beginItemNo}
		]]>
			</otherwise>
		</choose>
	</select>



	<!-- 전체 board List 갯수 -->
	<select id="selectBoardCount" resultType="_int">
		SELECT COUNT(no)
		FROM board
	</select>






	<!-- @@@@@@@@@@@@ BOARD PICTURE @@@@@@@@@@@@@ -->


	<!-- BOARDPICTURE 등록 -->
	<insert id="insertBoardPicture" parameterType="boardPicture">
		<selectKey keyProperty="no" resultType="_int" order="BEFORE">
			SELECT BP_NO_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO board_picture VALUES(
		#{no},#{route},#{boardNo}
		)
	</insert>


	<!-- BoardPicture 삭제 -->
	<delete id="deleteBPByBoardNo" parameterType="_int">
		DELETE FROM board_picture
		WHERE board_no=${value}
	</delete>

	<!-- BoardPicture boardNo조회 -->
	<select id="selectBPByBoardNo" parameterType="int"
		resultMap="boardPicture-reusltmap">
		SELECT no,route,board_no
		FROM board_picture
		WHERE board_no=${value}
	</select>

</mapper>